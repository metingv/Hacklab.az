{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\hacklab.az1.2\\\\src\\\\components\\\\SolanaConnect.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef } from \"react\";\nimport $ from \"jquery\";\nimport { createStyles, makeStyles } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexDirection: \"column\",\n    flexGrow: 1\n  },\n  input: {\n    width: 500,\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  button: {\n    width: 100,\n    padding: \"auto\"\n  }\n}));\n\nconst getProvider = () => {\n  if (\"solana\" in window) {\n    const provider = window.solana;\n    window.open(\"https://airtable.com/\", \"_blank\");\n\n    if (provider.isPhantom) {\n      return provider;\n    }\n  }\n\n  window.open(\"https://phantom.app/\", \"_blank\");\n};\n\nexport const Wallet = () => {\n  _s();\n\n  var _provider$publicKey2, _provider$publicKey3;\n\n  const [signed, setSigned] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const classes = useStyles();\n  const provider = getProvider();\n  console.log(provider);\n  const [logs, setLogs] = useState([]);\n\n  const addLog = log => setLogs([...logs, log]);\n\n  const [, setConnected] = useState(false);\n  const ref1 = useRef();\n  const ref2 = useRef();\n  useEffect(() => {\n    if (provider) {\n      provider.on(\"connect\", () => {\n        var _provider$publicKey;\n\n        setConnected(true);\n        $(\".h1a\").css(\"background\", \"blue\");\n        addLog(\"Connected to wallet \" + ((_provider$publicKey = provider.publicKey) === null || _provider$publicKey === void 0 ? void 0 : _provider$publicKey.toBase58()));\n      });\n      provider.on(\"disconnect\", () => {\n        setConnected(false);\n        $(\".h1a\").css(\"background\", \"red\");\n        addLog(\"Disconnected from wallet\");\n      }); // try to eagerly connect\n\n      provider.connect({\n        onlyIfTrusted: true\n      });\n      return () => {\n        provider.disconnect();\n      };\n    }\n  }, [provider]);\n\n  const signMessage = async () => {\n    const data = new TextEncoder().encode(text);\n    const signedMessage = await provider.signMessage(data);\n    console.log(signedMessage);\n    setSigned(signedMessage.signature.toString());\n    addLog(\"Message signed\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [provider && provider.publicKey ? /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"walletinput\",\n      defaultValue: ((_provider$publicKey2 = provider.publicKey) === null || _provider$publicKey2 === void 0 ? void 0 : _provider$publicKey2.toBase58()) ? (_provider$publicKey3 = provider.publicKey) === null || _provider$publicKey3 === void 0 ? void 0 : _provider$publicKey3.toBase58() : \"\",\n      disabled: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-1\",\n        onClick: () => {\n          if (!provider) {\n            $(\".alert1\").css(\"display\", \"flex\");\n            setTimeout(() => {\n              $(\".alert1\").css(\"display\", \"none\");\n            }, 10000);\n          } else {\n            provider.connect();\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          children: /*#__PURE__*/_jsxDEV(\"rect\", {\n            x: \"0\",\n            y: \"0\",\n            fill: \"\",\n            width: \"100%\",\n            height: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"span-text-abune\",\n          children: \"CONNECT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref2,\n      className: \"alert1\",\n      children: [\"Z\\u0259hm\\u0259t olmasa, \\u0259vv\\u0259lc\\u0259 Phantom pul kis\\u0259si uzant\\u0131s\\u0131n\\u0131 qura\\u015Fd\\u0131r\\u0131n v\\u0259 i\\u015F\\u0259 sal\\u0131n, r\\u0259smi vebsayta daxil olmaq \\xFC\\xE7\\xFCn buraya\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://phantom.app/\",\n        target: \"_blank\",\n        children: \"klikl\\u0259yin, Sehifeni yenilemeyi unutmayin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Wallet, \"tHyaSY1mGwN8xscaf5MipfOIeRo=\", false, function () {\n  return [useStyles];\n});\n\n_c = Wallet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"sources":["C:/Users/user/Desktop/hacklab.az1.2/src/components/SolanaConnect.tsx"],"names":["useState","useEffect","useRef","$","createStyles","makeStyles","useStyles","theme","root","flexDirection","flexGrow","input","width","padding","spacing","textAlign","color","palette","text","secondary","button","getProvider","window","provider","solana","open","isPhantom","Wallet","signed","setSigned","setText","classes","console","log","logs","setLogs","addLog","setConnected","ref1","ref2","on","css","publicKey","toBase58","connect","onlyIfTrusted","disconnect","signMessage","data","TextEncoder","encode","signedMessage","signature","toString","setTimeout"],"mappings":"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","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\r\nimport { PublicKey, Transaction } from \"@solana/web3.js\";\r\nimport $ from \"jquery\";\r\nimport {\r\n  Button,\r\n  createStyles,\r\n  Grid,\r\n  Input,\r\n  makeStyles,\r\n  Theme\r\n} from \"@material-ui/core\";\r\n\r\ntype DisplayEncoding = \"utf8\" | \"hex\";\r\ntype PhantomEvent = \"disconnect\" | \"connect\";\r\ntype PhantomRequestMethod =\r\n  | \"connect\"\r\n  | \"disconnect\"\r\n  | \"signTransaction\"\r\n  | \"signAllTransactions\"\r\n  | \"signMessage\";\r\n\r\ninterface ConnectOpts {\r\n  onlyIfTrusted: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexDirection: \"column\",\r\n      flexGrow: 1\r\n    },\r\n    input: {\r\n      width: 500,\r\n      padding: theme.spacing(2),\r\n      textAlign: \"center\",\r\n      color: theme.palette.text.secondary\r\n    },\r\n    button: {\r\n      width: 100,\r\n      padding: \"auto\"\r\n    }\r\n  })\r\n);\r\n\r\ninterface PhantomProvider {\r\n  publicKey: PublicKey | null;\r\n  isConnected: boolean | null;\r\n  autoApprove: boolean | null;\r\n  signTransaction: (transaction: Transaction) => Promise<Transaction>;\r\n  signAllTransactions: (transactions: Transaction[]) => Promise<Transaction[]>;\r\n  signMessage: (\r\n    message: Uint8Array | string,\r\n    display?: DisplayEncoding\r\n  ) => Promise<any>;\r\n  connect: (opts?: Partial<ConnectOpts>) => Promise<void>;\r\n  disconnect: () => Promise<void>;\r\n  on: (event: PhantomEvent, handler: (args: any) => void) => void;\r\n  request: (method: PhantomRequestMethod, params: any) => Promise<any>;\r\n}\r\n\r\nconst getProvider = (): PhantomProvider | undefined => {\r\n  if (\"solana\" in window) {\r\n    const provider = (window).solana;\r\n    window.open(\"https://airtable.com/\", \"_blank\");\r\n    if (provider.isPhantom) {\r\n      return provider;\r\n    }\r\n  }\r\n  window.open(\"https://phantom.app/\", \"_blank\");\r\n};\r\n\r\nexport const Wallet = () => {\r\n  const [signed, setSigned] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const classes = useStyles();\r\n  const provider = getProvider();\r\n  console.log(provider);\r\n  const [logs, setLogs] = useState<string[]>([]);\r\n  const addLog = (log: string) => setLogs([...logs, log]);\r\n  const [, setConnected] = useState<boolean>(false);\r\n  const ref1 = useRef();\r\n  const ref2 = useRef();\r\n  useEffect(() => {\r\n    if (provider) {\r\n      provider.on(\"connect\", () => {\r\n        setConnected(true);\r\n        $(\".h1a\").css(\"background\", \"blue\");\r\n\r\n        addLog(\"Connected to wallet \" + provider.publicKey?.toBase58());\r\n      });\r\n      provider.on(\"disconnect\", () => {\r\n        setConnected(false);\r\n        $(\".h1a\").css(\"background\", \"red\");\r\n        addLog(\"Disconnected from wallet\");\r\n      });\r\n      // try to eagerly connect\r\n      provider.connect({ onlyIfTrusted: true });\r\n      return () => {\r\n        provider.disconnect();\r\n      };\r\n    }\r\n  }, [provider]);\r\n\r\n  const signMessage = async () => {\r\n    const data = new TextEncoder().encode(text);\r\n    const signedMessage = await provider.signMessage(data);\r\n    console.log(signedMessage);\r\n    setSigned(signedMessage.signature.toString());\r\n    addLog(\"Message signed\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {provider && provider.publicKey ? (\r\n        <input\r\n          id=\"walletinput\"\r\n          defaultValue={\r\n            provider.publicKey?.toBase58() ? provider.publicKey?.toBase58() : \"\"\r\n          }\r\n          disabled\r\n        />\r\n      ) : (\r\n        <>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-1\"\r\n            onClick={() => {\r\n              if (!provider) {\r\n                $(\".alert1\").css(\"display\", \"flex\");\r\n                setTimeout(() => {\r\n                  $(\".alert1\").css(\"display\", \"none\");\r\n                }, 10000);\r\n              } else {\r\n                provider.connect();\r\n              }\r\n            }}\r\n          >\r\n            <svg>\r\n              <rect x=\"0\" y=\"0\" fill=\"\" width=\"100%\" height=\"100%\" />\r\n            </svg>\r\n            <span className=\"span-text-abune\">CONNECT</span>\r\n          </button>\r\n          {/* <button\r\n            onClick={() => {\r\n              if (!provider) {\r\n                $(\".alert1\").css(\"display\", \"flex\");\r\n                setTimeout(() => {\r\n                  $(\".alert1\").css(\"display\", \"none\");\r\n                }, 10000);\r\n              } else {\r\n                provider.connect();\r\n              }\r\n            }}\r\n          >\r\n            Connect to Phantom\r\n          </button> */}\r\n        </>\r\n      )}\r\n\r\n      {/* <button onClick={() => provider.disconnect()} id=\"button1\">\r\n        DisConnect to Phantom\r\n      </button> */}\r\n\r\n      <div ref={ref2} className=\"alert1\">\r\n        Zəhmət olmasa, əvvəlcə Phantom pul kisəsi uzantısını quraşdırın və işə\r\n        salın, rəsmi vebsayta daxil olmaq üçün buraya\r\n        <a href=\"https://phantom.app/\" target=\"_blank\">\r\n          klikləyin, Sehifeni yenilemeyi unutmayin\r\n        </a>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}