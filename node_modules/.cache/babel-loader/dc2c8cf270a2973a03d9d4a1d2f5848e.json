{"ast":null,"code":"import i18n from\"i18next\";import LanguageDetector from\"i18next-browser-languagedetector\";import{initReactI18next}from\"react-i18next\";import translationAZ from\"./json/translateAz.json\";import translationEN from\"./json/translateEN.json\";import translationRU from\"./json/translateRU.json\";i18n.use(LanguageDetector).use(initReactI18next).init({// we init with resources\nlng:\"aze\",// default language\nresources:{aze:{translations:translationAZ},en:{translations:translationEN},rus:{translations:translationRU}},fallbackLng:false,debug:true,react:{// ...\nhashTransKey:function(defaultValue){// return a key based on defaultValue or if you prefer to just remind you should set a key return false and throw an error\n},defaultTransParent:'div',// a valid react element - required before react 16\ntransEmptyNodeValue:'',// what to return for empty Trans\ntransSupportBasicHtmlNodes:true,// allow <br/> and simple html elements in translations\ntransKeepBasicHtmlNodesFor:['br','strong','i'],// don't convert to <1></1> if simple react elements\ntransWrapTextNodes:''// Wrap text nodes in a user-specified element.\n// i.e. set it to 'span'. By default, text nodes are not wrapped.\n// Can be used to work around a well-known Google Translate issue with React apps. See: https://github.com/facebook/react/issues/11538\n// (v11.10.0)\n},// have a common namespace used around the full app\nns:[\"translations\"],defaultNS:\"translations\",keySeparator:false,// we use content as keys\ninterpolation:{escapeValue:false}});export default i18n;","map":{"version":3,"sources":["C:/Users/user/Desktop/netlify/hacklab.az1.3/src/i18n.js"],"names":["i18n","LanguageDetector","initReactI18next","translationAZ","translationEN","translationRU","use","init","lng","resources","aze","translations","en","rus","fallbackLng","debug","react","hashTransKey","defaultValue","defaultTransParent","transEmptyNodeValue","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","transWrapTextNodes","ns","defaultNS","keySeparator","interpolation","escapeValue"],"mappings":"AAAA,MAAOA,CAAAA,IAAP,KAAiB,SAAjB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kCAA7B,CACA,OAASC,gBAAT,KAAiC,eAAjC,CACA,MAAOC,CAAAA,aAAP,KAA0B,yBAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,yBAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,yBAA1B,CAIAL,IAAI,CACDM,GADH,CACOL,gBADP,EAEGK,GAFH,CAEOJ,gBAFP,EAGGK,IAHH,CAGQ,CACJ;AACCC,GAAG,CAAE,KAFF,CAEU;AACdC,SAAS,CAAE,CACTC,GAAG,CAAE,CACHC,YAAY,CAAER,aADX,CADI,CAITS,EAAE,CAAE,CACFD,YAAY,CAAEP,aADZ,CAJK,CAOTS,GAAG,CAAE,CACHF,YAAY,CAAEN,aADX,CAPI,CAHP,CAcJS,WAAW,CAAE,KAdT,CAeJC,KAAK,CAAE,IAfH,CAgBJC,KAAK,CAAE,CACP;AACAC,YAAY,CAAE,SAASC,YAAT,CAAuB,CACnC;AACD,CAJM,CAKPC,kBAAkB,CAAE,KALb,CAKoB;AAC3BC,mBAAmB,CAAE,EANd,CAMkB;AACzBC,0BAA0B,CAAE,IAPrB,CAO2B;AAClCC,0BAA0B,CAAE,CAAC,IAAD,CAAO,QAAP,CAAiB,GAAjB,CARrB,CAQ4C;AACnDC,kBAAkB,CAAE,EAAI;AACA;AACA;AACA;AAZjB,CAhBH,CA+BJ;AACAC,EAAE,CAAE,CAAC,cAAD,CAhCA,CAiCJC,SAAS,CAAE,cAjCP,CAmCJC,YAAY,CAAE,KAnCV,CAmCiB;AAErBC,aAAa,CAAE,CACbC,WAAW,CAAE,KADA,CArCX,CAHR,EA6CA,cAAe5B,CAAAA,IAAf","sourcesContent":["import i18n from \"i18next\";\r\nimport LanguageDetector from \"i18next-browser-languagedetector\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport translationAZ from \"./json/translateAz.json\";\r\nimport translationEN from \"./json/translateEN.json\";\r\nimport translationRU from \"./json/translateRU.json\";\r\n\r\n\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next) \r\n  .init({\r\n    // we init with resources\r\n     lng: \"aze\",  // default language\r\n    resources: {\r\n      aze: {\r\n        translations: translationAZ\r\n      },\r\n      en: {\r\n        translations: translationEN\r\n      },\r\n      rus: {\r\n        translations: translationRU\r\n      }\r\n    },\r\n    fallbackLng: false,\r\n    debug: true,\r\n    react: {\r\n    // ...\r\n    hashTransKey: function(defaultValue) {\r\n      // return a key based on defaultValue or if you prefer to just remind you should set a key return false and throw an error\r\n    },\r\n    defaultTransParent: 'div', // a valid react element - required before react 16\r\n    transEmptyNodeValue: '', // what to return for empty Trans\r\n    transSupportBasicHtmlNodes: true, // allow <br/> and simple html elements in translations\r\n    transKeepBasicHtmlNodesFor: ['br', 'strong', 'i'], // don't convert to <1></1> if simple react elements\r\n    transWrapTextNodes: '', // Wrap text nodes in a user-specified element.\r\n                            // i.e. set it to 'span'. By default, text nodes are not wrapped.\r\n                            // Can be used to work around a well-known Google Translate issue with React apps. See: https://github.com/facebook/react/issues/11538\r\n                            // (v11.10.0)\r\n  },\r\n\r\n    // have a common namespace used around the full app\r\n    ns: [\"translations\"],\r\n    defaultNS: \"translations\",\r\n\r\n    keySeparator: false, // we use content as keys\r\n\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  });\r\n\r\nexport default i18n;\r\n"]},"metadata":{},"sourceType":"module"}