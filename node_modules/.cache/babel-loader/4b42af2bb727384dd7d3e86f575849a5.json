{"ast":null,"code":"const data = require(\"../json/filterAz.json\");\n\nconst data1 = require(\"../json/filterEN.json\");\n\ncombined = _.extend({}, data, data2);\n\nconst RootReducer1 = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : data;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(\"action.id \" + action.id);\n  console.log(\"state.search \" + state.search);\n\n  switch (action.type) {\n    case \"AFTER_SEARCH\":\n      let s = state.text0.filter(text0 => text0.title.toLowerCase().includes(action.id.toLowerCase()));\n      let s3t = state.text2.filter(text2 => text2.title.toLowerCase().includes(action.id.toLowerCase()));\n      let s3 = state.text2.filter(text2 => toString(text2.content.Empty).toLowerCase().includes(action.id.toLowerCase()));\n      let alls = s.concat(s3, s3t);\n      return { ...state,\n        s: alls\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = RootReducer1;\nexport default RootReducer1;\n\nvar _c;\n\n$RefreshReg$(_c, \"RootReducer1\");","map":{"version":3,"sources":["C:/Users/user/Desktop/hacklab.az1.3/src/Reducer/RootReducer1.js"],"names":["data","require","data1","combined","_","extend","data2","RootReducer1","state","action","console","log","id","search","type","s","text0","filter","title","toLowerCase","includes","s3t","text2","s3","toString","content","Empty","alls","concat"],"mappings":"AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,uBAAD,CAArB;;AACAE,QAAQ,GAAGC,CAAC,CAACC,MAAF,CAAS,EAAT,EACPL,IADO,EAEPM,KAFO,CAAX;;AAUA,MAAMC,YAAY,GAAG,YAA0B;AAAA,MAAzBC,KAAyB,uEAAjBR,IAAiB;AAAA,MAAXS,MAAW;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAgBF,MAAM,CAACG,EAAnC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBH,KAAK,CAACK,MAApC;;AACA,UAAQJ,MAAM,CAACK,IAAf;AACI,SAAK,cAAL;AACA,UAAIC,CAAC,GAAGP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CACLD,KAAD,IAAYA,KAAK,CAACE,KAAN,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCX,MAAM,CAACG,EAAP,CAAUO,WAAV,EAAnC,CADN,CAAR;AAGA,UAAIE,GAAG,GAAGb,KAAK,CAACc,KAAN,CAAYL,MAAZ,CACPK,KAAD,IAAYA,KAAK,CAACJ,KAAN,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmCX,MAAM,CAACG,EAAP,CAAUO,WAAV,EAAnC,CADJ,CAAV;AAGA,UAAII,EAAE,GAAGf,KAAK,CAACc,KAAN,CAAYL,MAAZ,CACNK,KAAD,IAAYE,QAAQ,CAACF,KAAK,CAACG,OAAN,CAAcC,KAAf,CAAR,CAA8BP,WAA9B,GAA4CC,QAA5C,CAAqDX,MAAM,CAACG,EAAP,CAAUO,WAAV,EAArD,CADL,CAAT;AAIA,UAAIQ,IAAI,GAAGZ,CAAC,CAACa,MAAF,CAASL,EAAT,EAAYF,GAAZ,CAAX;AAEA,aAAO,EACL,GAAGb,KADE;AAELO,QAAAA,CAAC,EAAEY;AAFE,OAAP;;AAMF;AACE,aAAOnB,KAAP;AArBJ;AAuBD,CA1BD;;KAAMD,Y;AA4BN,eAAeA,YAAf","sourcesContent":["const data = require(\"../json/filterAz.json\");\r\nconst data1 = require(\"../json/filterEN.json\");\r\ncombined = _.extend({},\r\n    data,\r\n    data2\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst RootReducer1 = (state = data, action) => {\r\n  console.log(\"action.id \" +  action.id)\r\n  console.log(\"state.search \" + state.search)\r\n  switch (action.type) {\r\n      case \"AFTER_SEARCH\":\r\n      let s = state.text0.filter(\r\n        (text0) =>  text0.title.toLowerCase().includes(action.id.toLowerCase())\r\n      );\r\n      let s3t = state.text2.filter(\r\n        (text2) =>  text2.title.toLowerCase().includes(action.id.toLowerCase())\r\n      );\r\n      let s3 = state.text2.filter(\r\n        (text2) =>  toString(text2.content.Empty).toLowerCase().includes(action.id.toLowerCase())\r\n      );\r\n\r\n      let alls = s.concat(s3,s3t)\r\n\r\n      return {\r\n        ...state,\r\n        s: alls\r\n\r\n\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default RootReducer1;\r\n"]},"metadata":{},"sourceType":"module"}